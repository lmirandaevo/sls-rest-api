org: lmiranda
app: notes
service: notes-api
frameworkVersion: '2 || 3'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: us-east-1

functions:
  authorizer: 
    handler: authorizer.handler
    environment:
      COGNITO_USERPOOL_ID: !Ref cognitoUserPool
      COGNITO_WEB_CLIENT_ID: !Ref cognitoUserPoolWebClient

  createNote:
    handler: handler.createNote
    environment:
      NOTES_TABLE_NAME: !Ref zmmttNotesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt zmmttNotesTable.Arn
    events:
      - http: 
          method: post
          path: notes
          authorizer: authorizer

  updateNote:
    handler: handler.updateNote
    environment:
      NOTES_TABLE_NAME: !Ref zmmttNotesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt zmmttNotesTable.Arn
    events:
      - http: 
          method: put
          path: notes/{idNota}
          authorizer: authorizer

  deleteNote:
    handler: handler.deleteNote
    environment:
      NOTES_TABLE_NAME: !Ref zmmttNotesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: !GetAtt zmmttNotesTable.Arn
    events:
      - http: 
          method: delete 
          path: notes/{idNota}  
          authorizer: authorizer

  getAllNotes:
    handler: handler.getAllNotes
    environment:
      NOTES_TABLE_NAME: !Ref zmmttNotesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: !GetAtt zmmttNotesTable.Arn
    events:
      - http: 
          method: get
          path: notes
          # authorizer: authorizer
          authorizer:
            name: userpool_authorizer
            type: COGNITO_USER_POOLS
            # arn: arn:aws:cognito-idp:us-east-1:318938775622:userpool/us-east-1_GENHIzJUZ
            # arn: !GetAtt cognitoUserPool.Arn
            arn: !GetAtt cognitoUserPool.Arn

plugins:
  - serverless-iam-roles-per-function

resources:
  Resources:
    ${file(resources.yml)}
